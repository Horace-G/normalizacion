/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package normalizador;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author hegalda
 */
public class Main extends javax.swing.JFrame {
    
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregarElementoUniverso = new javax.swing.JDialog();
        NombreagregarElementoUniverso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        OKagregarElementoUniverso = new javax.swing.JButton();
        normalizar = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        TP_2FN = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TP_3FN = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaDependenciasF = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        Textbox_DFAgregar1 = new javax.swing.JTextField();
        Textbox_DFAgregar2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaUniverso = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        BotonAgregarUniverso = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        jLabel2.setText("Ingrese Elemento");

        OKagregarElementoUniverso.setText("OK");
        OKagregarElementoUniverso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKagregarElementoUniversoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout agregarElementoUniversoLayout = new javax.swing.GroupLayout(agregarElementoUniverso.getContentPane());
        agregarElementoUniverso.getContentPane().setLayout(agregarElementoUniversoLayout);
        agregarElementoUniversoLayout.setHorizontalGroup(
            agregarElementoUniversoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarElementoUniversoLayout.createSequentialGroup()
                .addGroup(agregarElementoUniversoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agregarElementoUniversoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(NombreagregarElementoUniverso))
                    .addGroup(agregarElementoUniversoLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel2)
                        .addGap(0, 61, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(agregarElementoUniversoLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(OKagregarElementoUniverso)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        agregarElementoUniversoLayout.setVerticalGroup(
            agregarElementoUniversoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarElementoUniversoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NombreagregarElementoUniverso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OKagregarElementoUniverso)
                .addContainerGap())
        );

        jScrollPane4.setViewportView(TP_2FN);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("2FN");

        jScrollPane5.setViewportView(TP_3FN);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("3FN");

        jButton4.setText("OK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout normalizarLayout = new javax.swing.GroupLayout(normalizar.getContentPane());
        normalizar.getContentPane().setLayout(normalizarLayout);
        normalizarLayout.setHorizontalGroup(
            normalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(normalizarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(normalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4)
                    .addGroup(normalizarLayout.createSequentialGroup()
                        .addGroup(normalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(normalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        normalizarLayout.setVerticalGroup(
            normalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(normalizarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(normalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(normalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addGap(4, 4, 4)
                .addComponent(jButton4))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dependencias Funcionales Creadas"));

        jScrollPane2.setViewportView(ListaDependenciasF);

        jButton1.setBackground(new java.awt.Color(51, 255, 0));
        jButton1.setText("Agregar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Textbox_DFAgregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Textbox_DFAgregar1ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("determina");

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setText("Eliminar");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Variable 1");

        jLabel6.setText("Variable 2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Textbox_DFAgregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(113, 113, 113)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Textbox_DFAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(21, 21, 21)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Textbox_DFAgregar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Textbox_DFAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jSeparator1.getAccessibleContext().setAccessibleName("a");

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 430, 320));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Universo  de Variables"));

        jScrollPane1.setViewportView(ListaUniverso);

        jButton3.setText("Eliminar");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        BotonAgregarUniverso.setText("Agregar");
        BotonAgregarUniverso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonAgregarUniverso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarUniversoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BotonAgregarUniverso, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAgregarUniverso)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 140, 320));
        jPanel2.getAccessibleContext().setAccessibleDescription("");

        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Correr");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Claves Candidatas");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Normalizar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonAgregarUniversoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarUniversoActionPerformed
        /*
        Este boton abre una ventana de dialogo que contiene una etiqueta sobre la cual el usuario
        puede ingresar la variable que desea agregar al universe y con la que desea crear dependencias
        funcionales.
        */
        
        this.agregarElementoUniverso.setModal(true);
        this.agregarElementoUniverso.pack();
        this.agregarElementoUniverso.setVisible(true);
    }//GEN-LAST:event_BotonAgregarUniversoActionPerformed

    private void OKagregarElementoUniversoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKagregarElementoUniversoActionPerformed
       
        /*
        Este boton agrega la variable ingresada por el usuario en la lista del universe
        */
        
        DefaultListModel listModelU = new DefaultListModel(); 
        boolean existsInList=false;//bandera inicializada en false
        
        if(this.ListaUniverso.getModel().getSize() > 0){//si existe algun elemento en la lista
            for(int i=0 ; i<this.ListaUniverso.getModel().getSize(); i++ ){  
                listModelU.addElement(this.ListaUniverso.getModel().getElementAt(i)); //obtenemos el elemento
                if((this.NombreagregarElementoUniverso.getText().replace(" ", "")).equals(this.ListaUniverso.getModel().getElementAt(i))){
                    existsInList=true;//comparamos la variable que el usuario ingreso con la lista del univer
                                      //para ver si esa variable de hecho existe
                }
            } 
        }
        if(!existsInList){//si la variable no existe, se agrega la variable al universe
            listModelU.addElement(this.NombreagregarElementoUniverso.getText().replace(" ", "").toUpperCase());
            this.ListaUniverso.setModel(listModelU);
        }
        //se dejan las etiquetas en blanco para que el usuario ingrese nuevas variables
        this.NombreagregarElementoUniverso.setText("");
        this.agregarElementoUniverso.dispose();
    }//GEN-LAST:event_OKagregarElementoUniversoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        /*
        Este boton elimina la DF de la lista, después de sus respectivas validaciones
        */
        
        //agregamos todas las DF en un nuevo modelo para poder modificarlo
        DefaultListModel listModelDF = new DefaultListModel();  
        for(int i=0 ; i<this.ListaDependenciasF.getModel().getSize() ; i++ ){  
            listModelDF.addElement(this.ListaDependenciasF.getModel().getElementAt(i));  
        } 
        
        //si la lista no esta vacia
        if(!this.ListaDependenciasF.isSelectionEmpty()){
                //eliminamos dependiendo de las filas que el usuario escogio dentro de la lista de DF
                //y estas filas son ingresadas a un arreglo de enteros que simbolizan las posiciones
                //de las filas dentro de la lista
                int[] eliminar = this.ListaDependenciasF.getSelectedIndices();
                for(int i=0 ; i<eliminar.length; i++ ){  
                    listModelDF.remove(eliminar[i]); //se van eliminando todas las filas contenidas en el arreglo
                }
                this.ListaDependenciasF.setModel(listModelDF);//seteamos el nuevo modelo
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Textbox_DFAgregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Textbox_DFAgregar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Textbox_DFAgregar1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
        /*
        Este boton agrega la dependencia funcional a la lista de DF
        */
        
        DefaultListModel listModelDF = new DefaultListModel();  
        boolean existsInList=false;//bandera que determina si la DF esta en la lista
        if(this.ListaDependenciasF.getModel().getSize() > 0){//si la lista de DF NO esta vacia
            for(int i=0 ; i<this.ListaDependenciasF.getModel().getSize(); i++ ){//recorremos la lista de DF
                listModelDF.addElement(this.ListaDependenciasF.getModel().getElementAt(i));//obtenemos el elemento
                
                /*
                Comparamos las dos variables concatenadas con la lista de DF solo para saber si ya esta repetida
                */
                
                if((this.Textbox_DFAgregar1.getText().replace(" ", "").toUpperCase() + "->" + this.Textbox_DFAgregar2.getText().replace(" ", "").toUpperCase()).equals(this.ListaDependenciasF.getModel().getElementAt(i))){
                    existsInList=true;
                }
            }          
        }
        if(!existsInList){//si la combinacion no existe en la lista de DF entonces la agregamos
            
              /*
                Aqui concatenamos toda la dependencia funcional
                Tomamos las variables ingresadas a ambas textboxes y le concatenamos un -> en el centro
                con el fin de una impresion "Bonita" y amigable al usuario.
                */
            
            //se envian la dos entradas (las dos variables) a un metodo que verifica si existe la DF
            if(DFExists(this.Textbox_DFAgregar1.getText().replace(" ", "").toUpperCase(), this.Textbox_DFAgregar2.getText().replace(" ", "").toUpperCase())){
                listModelDF.addElement(this.Textbox_DFAgregar1.getText().replace(" ", "").toUpperCase() + "->" + this.Textbox_DFAgregar2.getText().replace(" ", "").toUpperCase()); 
                this.ListaDependenciasF.setModel(listModelDF);//seteamos el modelo actualizado
            }else{//si ocurre un error porque las variables ingresadas no existen en el universe
                JOptionPane.showMessageDialog (null, "ERROR, las variables ingresadas deben estar en el universe.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        //volvemos a poner las etiquetas de las dos variables en blanco
        this.Textbox_DFAgregar1.setText("");
        this.Textbox_DFAgregar2.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        /*
        Este boton elimina las variables de la lista del universe
        */
        
        //recorremos la lista del universe y obtenemos la variable que se va a eliminar
        DefaultListModel listModelU = new DefaultListModel();  
        for(int i=0 ; i<this.ListaUniverso.getModel().getSize() ; i++ ){  
            listModelU.addElement(this.ListaUniverso.getModel().getElementAt(i));  
        } 
        
        //si la variable que se desea eliminar existe en el universo ...
        
        if(!this.ListaUniverso.isSelectionEmpty()){
            //se envia a un metodo que valida si se puede borrar del universo
            if(PuedeBorrarElementoUniveso((String) this.ListaUniverso.getSelectedValue())){
                int[] eliminar = this.ListaUniverso.getSelectedIndices();
                for(int i=0 ; i<eliminar.length; i++ ){  
                    listModelU.remove(eliminar[i]); //vamos eliminando esa variable de toda la lista del universe
                }
                this.ListaUniverso.setModel(listModelU);//se setea el modelo actualizado
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        BuscadorClavesCandidatas bcc = new BuscadorClavesCandidatas();//instancia de la clase BuscadorClavesCandidatas
        
        String universe = "";//cadena que va a contener toda la informacion almacenada en la lista de variables del 
                              //universo
        for(int i=0; i<this.ListaUniverso.getModel().getSize(); i++){
            //Vamos concatenando toda la lista en la cadena universe
            universe = universe + "," + (String) this.ListaUniverso.getModel().getElementAt(i);
        }
        /*
        Despues le eliminamos la primera coma, porque recordemos que al inicio de todo, concatenamos una
        cadena universe vacia junto a una coma, entonces esta primera coma va a ser eliminada porque no la
        necesitamos
        
        Esta cadena despues es enviada 
        */
        
        StringBuilder sb1 = new StringBuilder(universe.toUpperCase());
        sb1.deleteCharAt(0);
        bcc.agregarUniverso(sb1.toString());
        
        String dependenciasFuncionales = "";//cadena que va a contener todas las dependencias funcionales de la lista
        for(int i=0; i<this.ListaDependenciasF.getModel().getSize(); i++){
            //vamos concatenando los valores de la lista de DFS en la cadena
            dependenciasFuncionales = dependenciasFuncionales + "," + (String) this.ListaDependenciasF.getModel().getElementAt(i);
        }
   
        /*
        De la misma manera, eliminamos la primera coma que se dio por contatenarla a una cadena que inicialmente
        estaba vacia, se convierte todo a mayúsculas, y luego se envia la cadena
        */
        StringBuilder sb2 = new StringBuilder(dependenciasFuncionales.toUpperCase());
        sb2.deleteCharAt(0);
        bcc.agregarDFs(sb2.toString());
        //System.out.println(sb2.toString());
        
        //se obtiene el arreglo de cadenas que contiene todas las claves y se le asigna al arreglo "arregloClaves"
        ArrayList<String> arregloClaves = bcc.obtenerLlaves();
        
        if(arregloClaves.isEmpty()){//si el arreglo de claves viene vacío
            JOptionPane.showMessageDialog (null, "No hay claves candidatas.", "Resultado", JOptionPane.WARNING_MESSAGE);
        }else if(arregloClaves.size()==1){//si solo existe una clave
            JOptionPane.showMessageDialog (null, "La clave candidata es:\n" + arregloClaves.get(0), "Resultado", JOptionPane.INFORMATION_MESSAGE);
               llave_primaria=arregloClaves.get(0);//la llave primaria seria la primera de todas las candidatas
        }else{//si no existe solo una clave 
            //se concatena todo a una cadena que sera enviada a un JOPtionPane posteriormente
            llave_primaria=arregloClaves.get(0);
            String mensajeDeDialogo = "";
            for(String elemento: arregloClaves){//for especial 
                //formato especial con tabulaciones y saltos de linea
                mensajeDeDialogo = "."
                        + "\t>" + ' ' + elemento + '\n' + mensajeDeDialogo;
            }
            //impresion de la cadena del arreglo recibido
            JOptionPane.showMessageDialog (null, "Las claves candidatas son:\n" + mensajeDeDialogo, "Resultado", JOptionPane.INFORMATION_MESSAGE);
        }
        //System.out.println("clave elegida: "+arregloClaves.get(0));
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        
        /*
        Esta accion deberá encontrar todas las formas normales 2FN y 3FN
        */
       
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.normalizar.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    
    //metodo que busca si la DF ingresada por el usuario existe en la lista de DFs existentes
    //el metodo recibe el texto contenida en las dos etiquetas, osea la variable que determina, y la 
    //que depende de la que la determina
    public boolean DFExists(String parte1DF, String parte2DF){
        ArrayList<String> Universo = new ArrayList<>();//creamos un nuevo arreglo
        
        /*
        Agregamos cada elemento de la lista al arreglo "Universo"
        */
        for(int i=0; i<this.ListaUniverso.getModel().getSize(); i++){
            Universo.add((String) this.ListaUniverso.getModel().getElementAt(i));
        }
        
        //parseamos los parametros del método
        String[] DFPartes1 = parte1DF.split("");
        String[] DFPartes2 = parte2DF.split("");
        
        for(String elementoEnValidacion : DFPartes1){//for especial de recorrido del lado izquiedo de la DF
            if(!Universo.contains(elementoEnValidacion)){//si la primera variable no existe en el universo
                return false;// se retorna falso, y se asume que la DF no es valida
            }
        }
        
        for(String elementoEnValidacion : DFPartes2){//for especial de recorrido del lado izquiedo de la DF
            if(!Universo.contains(elementoEnValidacion)){//si la segunda variable de la DF ingresada no esta en el universo
                return false;// se retorna falso, y se asume que la DF no es valida
            }
        }
        
        // si todo sale bien, se retorna true, y con esto se califica la DF del usuario como válida
        return true;
    }
    
    //este metodo valida si se puede borrar del universo y recibe el elemento que el usario quiere eliminar
    public boolean PuedeBorrarElementoUniveso(String ElementoABorrar){
        ArrayList<String> elements = new ArrayList<>();
        for(int i=0; i<this.ListaDependenciasF.getModel().getSize(); i++){
            String DF = (String) this.ListaDependenciasF.getModel().getElementAt(i);
            /*
            se quita la flecha de la impresion bonita para despues poder parsearla
            */
            DF = DF.replace("->", "");
            String[] elementsDF = DF.split("");
            for(String Elemento : elementsDF){
                //si el elemento actual no esta en el arreglo de elementos o su el arreglo esta vacio
                //se agrega al arreglo
                if(!elements.contains(Elemento) || elements.isEmpty()){
                    elements.add(Elemento);
                }
            }
        }
        // si el elemento que se desea borrar todavia forma parte de una dependencia funcional, no se puede eliiminar
        if(elements.contains(ElementoABorrar)){
            JOptionPane.showMessageDialog (null, "No se puede eliminar elemento porque aun forma parte de una Dependencia Funcional.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAgregarUniverso;
    private javax.swing.JList ListaDependenciasF;
    private javax.swing.JList ListaUniverso;
    private javax.swing.JTextField NombreagregarElementoUniverso;
    private javax.swing.JButton OKagregarElementoUniverso;
    private javax.swing.JTextPane TP_2FN;
    private javax.swing.JTextPane TP_3FN;
    private javax.swing.JTextField Textbox_DFAgregar1;
    private javax.swing.JTextField Textbox_DFAgregar2;
    private javax.swing.JDialog agregarElementoUniverso;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JDialog normalizar;
    // End of variables declaration//GEN-END:variables

    /*
    Variables globales propias
    */
    
 String llave_primaria="";
 ArrayList<Normalizacion> norm= new ArrayList();
 ArrayList<Normalizacion> Actualizadas = new ArrayList();
 ArrayList<Normalizacion> Resto = new ArrayList();

}
